# -*- coding: utf-8 -*-
# =====================================================================================================================
# These bindings were automatically generated by cyWrap. Please do dot modify.
# Additional functionality shall be implemented in sub-classes.
#
__copyright__ = "Copyright 2016 EPFL BBP-project"
# =====================================================================================================================
from cython.operator cimport dereference as deref
from libcpp cimport bool
cimport std
cimport morpho_h5_v1
cimport boost_numeric_ublas
cimport hadoken_geometry


# ======================================================================================================================
cdef extern from "morpho/morpho_types.hpp" namespace "morpho":
# ----------------------------------------------------------------------------------------------------------------------
    ctypedef boost_numeric_ublas.matrix[double] mat_points
    ctypedef boost_numeric_ublas.vector_range[mat_points] vec_double_range
    ctypedef boost_numeric_ublas.vector[double] vec_double
    ctypedef boost_numeric_ublas.matrix_range[vec_double] mat_range_points
    ctypedef boost_numeric_ublas.matrix[int] mat_index

    ctypedef hadoken_geometry.point3d point
    ctypedef hadoken_geometry.vector3d vector
    ctypedef hadoken_geometry.linestring3d linestring
    ctypedef hadoken_geometry.sphere3d sphere
    ctypedef hadoken_geometry.circle3d circle
    ctypedef hadoken_geometry.cone3d cone
    ctypedef std.vector[circle] circle_pipe
    ctypedef hadoken_geometry.box3d box

# ======================================================================================================================
cdef extern from "morpho/morpho_mesher.hpp" namespace "morpho":
# ----------------------------------------------------------------------------------------------------------------------

    ###### Cybinding for class morpho_mesher ######
    cdef cppclass morpho_mesher:
        enum mesh_tag:
            pass

        morpho_mesher(const morpho_mesher&) #copy ctor
        morpho_mesher(std.shared_ptr[morpho_tree], std.string)
        void set_mesh_tag(morpho_mesher.mesh_tag, bool)
        void set_error_bound(double)
        void set_face_size(double)
        void execute()

# ======================================================================================================================
cdef extern from "morpho/morpho_transform_filters.hpp" namespace "morpho":
# ----------------------------------------------------------------------------------------------------------------------

    ###### Cybinding for class delete_duplicate_point_operation ######
    cdef cppclass delete_duplicate_point_operation:
        delete_duplicate_point_operation()
        delete_duplicate_point_operation(const delete_duplicate_point_operation&)
        morpho_tree apply(morpho_tree)
        std.string name()

    ###### Cybinding for class duplicate_first_point_operation ######
    cdef cppclass duplicate_first_point_operation:
        duplicate_first_point_operation()
        duplicate_first_point_operation(const duplicate_first_point_operation&)
        morpho_tree apply(morpho_tree)
        std.string name()

# ======================================================================================================================
cdef extern from "morpho/morpho_spatial.hpp" namespace "morpho":
# ----------------------------------------------------------------------------------------------------------------------

    ###### Cybinding for class spatial_index ######
    cdef cppclass spatial_index:
        spatial_index()
        #spatial_index(const spatial_index&)
        void add_morpho_tree(std.shared_ptr[morpho_tree])
        bool is_within(point)

# ======================================================================================================================
cdef extern from "morpho/morpho_transform.hpp" namespace "morpho":
# ----------------------------------------------------------------------------------------------------------------------

    ###### Cybinding for class morpho_operation ######
    cdef cppclass morpho_operation:
        morpho_operation()
        morpho_operation(const morpho_operation&)
        morpho_tree apply(morpho_tree)
        std.string name()



# ======================================================================================================================
cdef extern from "morpho/morpho_tree.hpp" namespace "morpho::morpho_node_type":
# ----------------------------------------------------------------------------------------------------------------------
    cdef enum morpho_node_type "morpho::morpho_node_type":
        unknown = 0
        neuron_node_3d_type = 1
        neuron_branch_type = 2
        neuron_soma_type = 3

# ======================================================================================================================
cdef extern from "morpho/morpho_tree.hpp" namespace "morpho::neuron_struct_type":
# ----------------------------------------------------------------------------------------------------------------------
    cdef enum neuron_struct_type "morpho::neuron_struct_type":
        soma = 0
        axon = 1
        dentrite_basal = 2
        dentrite_apical = 3
        unknown = 4


# ======================================================================================================================
cdef extern from "morpho/morpho_tree.hpp" namespace "morpho":
# ----------------------------------------------------------------------------------------------------------------------

    ###### Cybinding for class morpho_node ######
    cdef cppclass morpho_node:
        morpho_node()
        morpho_node(const morpho_node)
        box get_bounding_box()
        bool is_of_type(morpho_node_type)

    ###### Cybinding for class neuron_node_3d ######
    cdef cppclass neuron_node_3d(morpho_node):
        neuron_node_3d(neuron_struct_type)
        neuron_node_3d(const neuron_node_3d)
        neuron_struct_type get_branch_type()
        #bool is_of_type(morpho_node_type)

    ###### Cybinding for class neuron_branch ######
    cdef cppclass neuron_branch(neuron_node_3d):
        neuron_branch(neuron_struct_type, std.vector[point], std.vector[double])
        neuron_branch(neuron_branch)
        #bool is_of_type(morpho_node_type)
        std.size_t get_number_points()
        std.vector[point] get_points()
        std.vector[double] get_radius()
        cone get_segment(std.size_t)
        #box get_bounding_box()
        box get_segment_bounding_box(std.size_t)
        sphere get_junction(std.size_t)
        box get_junction_sphere_bounding_box(std.size_t)
        linestring get_linestring()
        circle_pipe get_circle_pipe()


    ###### Cybinding for class neuron_soma ######
    cdef cppclass neuron_soma(neuron_node_3d):
        neuron_soma(std.vector[point] &&)
        #bool is_of_type(morpho_node_type)
        sphere get_sphere()
        #box get_bounding_box()
        std.vector[point] get_line_loop()

    ###### Cybinding for class morpho_tree ######
    cdef cppclass morpho_tree:
        morpho_tree()
        morpho_tree(morpho_tree)
        morpho_tree operator=(morpho_tree)
        morpho_tree operator=(morpho_tree)
        box get_bounding_box()
        std.size_t get_tree_size()
        void swap(morpho_tree)
        int add_node(int, std.shared_ptr[morpho_node])
        int copy_node(morpho_tree, int, int)
        morpho_node get_node(int)
        int get_parent(int)
        std.vector[int] get_children(int)
        std.vector[morpho_node*] get_all_nodes()

cdef extern from "<utility>" namespace "std":
    cdef std.vector[point] move_PointVector "std::move" (std.vector[point])

cdef extern from "<utility>" namespace "std":
    cdef std.vector[double] move_DoubleVec "std::move" (std.vector[double])