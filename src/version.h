// generated by CommonLibrary.cmake, do not edit.

/**
 * @file include/version.h
 * Defines version macros and class for library Brion.
 */

#pragma once

#include <string>

#include <minimorph/api.h>

namespace minimorph
{
/** The current major version. */
#define BRAIN_VERSION_MAJOR 1

/** The current minor version. */
#define BRAIN_VERSION_MINOR 8

/** The current patch level. */
#define BRAIN_VERSION_PATCH 0

/** The current SCM revision. */
#define BRAIN_VERSION_REVISION 0xba9ba9e

/** The current binary interface. */
#define BRAIN_VERSION_ABI 6ull

/** The current major.minor.version as a string. */
#define BRAIN_VERSION_STRING "1.8.0"

/** The current major.minor.version.revision as a string. */
#define BRAIN_REV_STRING "1.8.0.0xba9ba9e"

/** True if the current version is newer than the given one. */
#define BRAIN_VERSION_GT(MAJOR, MINOR, PATCH) \
    ((BRAIN_VERSION_MAJOR > MAJOR) ||         \
     (BRAIN_VERSION_MAJOR == MAJOR &&         \
      (BRAIN_VERSION_MINOR > MINOR ||         \
       (BRAIN_VERSION_MINOR == MINOR && BRAIN_VERSION_PATCH > PATCH))))

/** True if the current version is equal or newer to the given. */
#define BRAIN_VERSION_GE(MAJOR, MINOR, PATCH) \
    ((BRAIN_VERSION_MAJOR > MAJOR) ||         \
     (BRAIN_VERSION_MAJOR == MAJOR &&         \
      (BRAIN_VERSION_MINOR > MINOR ||         \
       (BRAIN_VERSION_MINOR == MINOR && BRAIN_VERSION_PATCH >= PATCH))))

/** True if the current version is older than the given one. */
#define BRAIN_VERSION_LT(MAJOR, MINOR, PATCH) \
    ((BRAIN_VERSION_MAJOR < MAJOR) ||         \
     (BRAIN_VERSION_MAJOR == MAJOR &&         \
      (BRAIN_VERSION_MINOR < MINOR ||         \
       (BRAIN_VERSION_MINOR == MINOR && BRAIN_VERSION_PATCH < PATCH))))

/** True if the current version is older or equal to the given. */
#define BRAIN_VERSION_LE(MAJOR, MINOR, PATCH) \
    ((BRAIN_VERSION_MAJOR < MAJOR) ||         \
     (BRAIN_VERSION_MAJOR == MAJOR &&         \
      (BRAIN_VERSION_MINOR < MINOR ||         \
       (BRAIN_VERSION_MINOR == MINOR && BRAIN_VERSION_PATCH <= PATCH))))

/** Information about the current Brion version. */
class BRAIN_API Version
{
public:
    /** @return the current major version of Brion. */
    static int getMajor();

    /** @return the current minor version of Brion. */
    static int getMinor();

    /** @return the current patch level of Brion. */
    static int getPatch();

    /** @return the current Brion version (MM.mm.pp). */
    static std::string getString();

    /** @return the SCM revision. */
    static unsigned long long getRevision();

    /** @return the current binary interface version of Brion. */
    static int getABI();

    /** @return the current Brion version plus the git SHA hash (MM.mm.pp.rev).
     */
    static std::string getRevString();

    /**
     * Runtime check for ABI compatibility.
     *
     * Call from code using Brion. Will fail if the executable
     * was compiled against a version incompatible with the runtime version.
     *
     * @return true if the link-time and compile-time DSO are compatible.
     */
    static bool check()
    {
        return getMajor() == BRAIN_VERSION_MAJOR &&
               getMinor() == BRAIN_VERSION_MINOR;
    }

    /** @return JSON schema describing this object. */
    static std::string getSchema()
    {
        return R"(
                {
                  "title": "Version",
                  "type": "object",
                  "description": "Version information of the running application",
                  "properties": {
                    "major": { "type": "integer" },
                    "minor": { "type": "integer" },
                    "patch": { "type": "integer" },
                    "abi": { "type": "integer" },
                    "revision": { "type": "string" }
                  }
               }
               )";
    }

    /** @return JSON-encoded data for this object. */
    static std::string toJSON()
    {
        return R"(
               {
                 "major": 1,
                 "minor": 8,
                 "patch": 0,
                 "abi": 6,
                 "revision": "ba9ba9e"
               }
               )";
    }
};
}
